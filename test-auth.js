const axios = require('axios');

const BASE_URL = 'http://localhost:8080';

async function testAuth() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    
    // –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    console.log('\n1. –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:');
    try {
      await axios.get(`${BASE_URL}/reports/salary`);
      console.log('‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –ø–æ–ª—É—á–µ–Ω–∞ 401 –æ—à–∏–±–∫–∞');
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response?.status, error.response?.data);
      }
    }
    
    // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\n2. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:');
    try {
      await axios.post(`${BASE_URL}/auth/login`, {
        phone: 'invalid',
        password: 'invalid'
      });
      console.log('‚ùå –û—à–∏–±–∫–∞: –≤—Ö–æ–¥ –ø—Ä–æ—à–µ–ª —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    } catch (error) {
      if (error.response?.status === 401 || error.response?.status === 400) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –ø–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response?.status, error.response?.data);
      }
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:');
    const endpoints = [
      '/reports/salary',
      '/child-attendance',
      '/task-list',
      '/staff-shifts'
    ];
    
    for (const endpoint of endpoints) {
      try {
        await axios.get(`${BASE_URL}${endpoint}`);
        console.log(`‚ùå ${endpoint}: –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏`);
      } catch (error) {
        if (error.response?.status === 401) {
          console.log(`‚úÖ ${endpoint}: –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞—â–∏—â–µ–Ω (401)`);
        } else if (error.response?.status === 404) {
          console.log(`‚ùå ${endpoint}: –Ω–µ –Ω–∞–π–¥–µ–Ω (404)`);
        } else {
          console.log(`‚ùì ${endpoint}: —Å—Ç–∞—Ç—É—Å ${error.response?.status}`);
        }
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testAuth();
