import mongoose from 'mongoose';
import Child from '../entities/children/model';

async function updateAllChildrenStatus() {
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await mongoose.connect(
      process.env.MONGO_URI ||
      process.env.MONGODB_URI ||
      'mongodb+srv://damir:damir@cluster0.ku60i6n.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'
    );
    
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    
    // –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª–µ active –¥–ª—è –≤—Å–µ—Ö –¥–µ—Ç–µ–π
    const result = await Child.updateMany(
      {}, // –§–∏–ª—å—Ç—Ä - –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
      { $set: { active: true } } // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å active –≤ true
    );
    
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${result.modifiedCount} –∑–∞–ø–∏—Å–µ–π –¥–µ—Ç–µ–π`);
    console.log(`üìã –í—Å–µ–≥–æ –¥–µ—Ç–µ–π –≤ –±–∞–∑–µ: ${result.matchedCount}`);
    
    await mongoose.connection.close();
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ—Ç–µ–π:', error);
    await mongoose.connection.close();
    process.exit(1);
  }
}

updateAllChildrenStatus();