import Payroll from '../models/Payroll';
import StaffAttendance from '../models/StaffAttendance';
import User, { IUser } from '../models/Users';
import Fine from '../models/Fine';
import EmailService from './emailService';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä EmailService
const emailService = new EmailService();

interface PayrollAutomationSettings {
  autoCalculationDay: number; // –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ (1-31)
  emailRecipients: string; // email –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –æ—Ç—á–µ—Ç–æ–≤
  autoClearData: boolean; // –æ—á–∏—â–∞—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Ä–∞—Å—á–µ—Ç–∞
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —à—Ç—Ä–∞—Ñ—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
 */
const calculatePenalties = async (staffId: string, month: string) => {
  // –§–æ—Ä–º–∞—Ç month: YYYY-MM
  const startDate = new Date(`${month}-01`);
  const endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0);
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
  const attendanceRecords = await StaffAttendance.find({
    staffId,
    date: {
      $gte: startDate,
      $lte: endDate
    }
  });
  
  let totalPenalty = 0;
  let latePenalties = 0;
  let absencePenalties = 0;
  
  // –®—Ç—Ä–∞—Ñ—ã –∑–∞ –æ–ø–æ–∑–¥–∞–Ω–∏—è: 100 —Ç–≥ –∑–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –æ–ø–æ–∑–¥–∞–Ω–∏—è
 const lateRecords = attendanceRecords.filter(record => record.lateMinutes && record.lateMinutes > 0);
  latePenalties = lateRecords.reduce((sum, record) => {
    if (record.lateMinutes) {
      return sum + Math.ceil(record.lateMinutes / 5) * 100;
    }
    return sum;
  }, 0);
  
  // –®—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–µ—è–≤–∫–∏: 630 —Ç–≥ –∑–∞ –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π (60*10,5 –º–∏–Ω—É—Ç –∫–∞–∫ –≤ –∑–∞–¥–∞–Ω–∏–∏)
  const absenceRecords = attendanceRecords.filter(record => record.status === 'no_show');
  absencePenalties = absenceRecords.length * 630;
  
  totalPenalty = latePenalties + absencePenalties;
  
  return {
    totalPenalty,
    latePenalties,
    absencePenalties,
    attendanceRecords
  };
};

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
 */
export const autoCalculatePayroll = async (month: string, settings: PayrollAutomationSettings) => {
  try {
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ ${month}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    const staff = await User.find({ 
      type: 'adult', 
      status: { $ne: 'inactive' } 
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${staff.length} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞`);
    
    const results = [];
    
    for (const employee of staff) {
      console.log(`üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ${employee.fullName}, ID: ${(employee as any)._id}`);
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —à—Ç—Ä–∞—Ñ—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
      const attendancePenalties = await calculatePenalties((employee as any)._id.toString(), month);
      console.log(`üìä –®—Ç—Ä–∞—Ñ—ã –∏–∑ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –¥–ª—è ${employee.fullName}:`, attendancePenalties);
      
      // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ (–æ–∫–ª–∞–¥)
      const baseSalary = employee.salary || 0;
      console.log(`üí∞ –û–∫–ª–∞–¥ –¥–ª—è ${employee.fullName}: ${baseSalary}`);
      
      // –ü–æ–ª—É—á–∞–µ–º —à—Ç—Ä–∞—Ñ—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Fine
      const monthStartDate = new Date(`${month}-01`);
      const monthEndDate = new Date(monthStartDate.getFullYear(), monthStartDate.getMonth() + 1, 0);

      const monthlyFines = await Fine.find({
        user: (employee as any)._id,
        date: { $gte: monthStartDate, $lte: monthEndDate }
      });

      const userFinesTotal = monthlyFines.reduce((sum, f) => sum + (f.amount || 0), 0);
      console.log(`üìã –®—Ç—Ä–∞—Ñ–æ–≤ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Fine –∑–∞ –º–µ—Å—è—Ü –¥–ª—è ${employee.fullName}: ${monthlyFines.length}, —Å—É–º–º–∞: ${userFinesTotal}`);
      
      // –û–±—â–∏–π –∏—Ç–æ–≥ —à—Ç—Ä–∞—Ñ–æ–≤: —à—Ç—Ä–∞—Ñ—ã –∏–∑ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ + —à—Ç—Ä–∞—Ñ—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      const totalPenalties = attendancePenalties.totalPenalty + userFinesTotal;
      console.log(`üí∞ –û–±—â–∏–µ —à—Ç—Ä–∞—Ñ—ã –¥–ª—è ${employee.fullName}: ${totalPenalties} (–ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å: ${attendancePenalties.totalPenalty} + –ø—Ä–æ—Ñ–∏–ª—å: ${userFinesTotal})`);
      
      // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –∑–∞—Ä–ø–ª–∞—Ç–µ
      let payroll = await Payroll.findOne({
        staffId: employee._id,
        month
      });
      
      if (payroll) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
        payroll.accruals = baseSalary;
        payroll.penalties = totalPenalties;
        // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        payroll.latePenalties = attendancePenalties.latePenalties;
        // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        payroll.absencePenalties = attendancePenalties.absencePenalties;
        // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        payroll.userFines = userFinesTotal;
        payroll.total = baseSalary - totalPenalties;
        await payroll.save();
      } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        payroll = new Payroll({
          staffId: employee._id,
          month,
          accruals: baseSalary,
          bonuses: 0, // –ü–æ–∫–∞ –±–µ–∑ –ø—Ä–µ–º–∏–π
          penalties: totalPenalties,
          // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
          latePenalties: attendancePenalties.latePenalties,
          // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
          absencePenalties: attendancePenalties.absencePenalties,
          // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ TypeScript –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
          userFines: userFinesTotal,
          total: baseSalary - totalPenalties,
          status: 'calculated'
        });
        await payroll.save();
      }
      
      results.push({
        staffId: employee._id,
        staffName: employee.fullName,
        baseSalary,
        penalties: totalPenalties,
        total: payroll.total
      });
      
      console.log(`–†–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ –¥–ª—è ${employee.fullName}: ${payroll.total}`);
    }
    
    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –æ—á–∏—â–∞–µ–º —à—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—à–µ–¥—à–∏–π –ø–µ—Ä–∏–æ–¥
    if (settings.autoClearData) {
      await clearAttendancePenalties(month);
    }
    
    console.log(`–ó–∞–≤–µ—Ä—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç –∑–∞ ${month}. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.length} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤`);
    
    return results;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–∞—Å—á–µ—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç:', error);
    throw error;
 }
};

/**
 * –û—á–∏—â–∞–µ—Ç —à—Ç—Ä–∞—Ñ—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
 */
const clearAttendancePenalties = async (month: string) => {
  try {
    console.log(`–û—á–∏—Å—Ç–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –∑–∞ ${month}`);
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —ç—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –æ —à—Ç—Ä–∞—Ñ–∞—Ö
    // –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏—Ö –≤ –∞—Ä—Ö–∏–≤.
    
    // –î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º—ã –º–æ–∂–µ–º:
    // 1. –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
    // 2. –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
    // 3. –ü–æ–º–µ—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
    
    // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã –ø–æ–º–µ—Ç–∏–º –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
    // –∏ –æ–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
    await Payroll.updateMany(
      { month },
      {
        $set: {
          status: 'processed'
        },
        $push: {
          history: {
            date: new Date(),
            action: 'Data cleared after payroll calculation',
            comment: 'Attendance penalties processed and cleared'
          }
        }
      }
    );
    
    // –ü–æ–º–µ—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
    await StaffAttendance.updateMany(
      {
        date: {
          $gte: new Date(`${month}-01`),
          $lte: new Date(new Date(`${month}-01`).getFullYear(), new Date(`${month}-01`).getMonth() + 1, 0)
        }
      },
      {
        $set: {
          processed: true,
          processedAt: new Date()
        }
      }
    );
    
    console.log(`–®—Ç—Ä–∞—Ñ—ã –∑–∞ ${month} –æ—á–∏—â–µ–Ω—ã. –ó–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ.`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —à—Ç—Ä–∞—Ñ–æ–≤:', error);
    throw error;
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç—ã –æ –∑–∞—Ä–ø–ª–∞—Ç–µ –ø–æ email
 */
export const sendPayrollReports = async (month: string, recipients: string) => {
  try {
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –æ –∑–∞—Ä–ø–ª–∞—Ç–µ –∑–∞ ${month} –Ω–∞ ${recipients}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–∞—Å—á–µ—Ç–Ω—ã–µ –ª–∏—Å—Ç—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
    const payrolls = await Payroll.find({ month })
      .populate('staffId', 'fullName email salary');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
    const reportData = {
      month,
      totalEmployees: payrolls.length,
      totalPayroll: payrolls.reduce((sum, p) => sum + p.total, 0),
      details: payrolls.map(p => ({
        staffName: (p.staffId as any).fullName,
        baseSalary: (p.staffId as any).salary,
        penalties: p.penalties,
        total: p.total,
        status: p.status
      }))
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –ø–æ email
    const emailRecipients = recipients.split(',').map(email => email.trim());
    
    for (const recipient of emailRecipients) {
      try {
        await emailService.sendPayrollReportEmail(recipient, reportData);
        console.log(`–û—Ç—á–µ—Ç –æ –∑–∞—Ä–ø–ª–∞—Ç–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ ${recipient}`);
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –Ω–∞ ${recipient}:`, error);
        throw error;
      }
    }
    
    console.log(`–û—Ç—á–µ—Ç—ã –æ –∑–∞—Ä–ø–ª–∞—Ç–µ –∑–∞ ${month} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–æ–≤:', error);
    throw error;
  }
};

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–µ–Ω—å
 */
export const runPayrollAutomation = async () => {
  try {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    // –∏–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ. –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
    // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—É—é –º–æ–¥–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    
    const currentDate = new Date();
    const currentDay = currentDate.getDate();
    
    // –í —Ü–µ–ª—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const settings: PayrollAutomationSettings = {
      autoCalculationDay: 25, // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 25-–µ —á–∏—Å–ª–æ
      emailRecipients: 'admin@example.com',
      autoClearData: true
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Å –¥–Ω–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
    if (currentDay === settings.autoCalculationDay) {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
      const previousMonth = `${currentDate.getFullYear()}-${(currentDate.getMonth()).toString().padStart(2, '0')}`;
      
      console.log(`–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞ ${previousMonth} –Ω–∞ –¥–µ–Ω—å ${currentDay}`);
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç
      await autoCalculatePayroll(previousMonth, settings);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç—ã –ø–æ email
      await sendPayrollReports(previousMonth, settings.emailRecipients);
      
      console.log('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log(`–°–µ–≥–æ–¥–Ω—è ${currentDay} —á–∏—Å–ª–æ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–æ–∂–∏–¥–∞–ª–æ—Å—å ${settings.autoCalculationDay} —á–∏—Å–ª–æ)`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç:', error);
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
 */
export const manualRunPayrollAutomation = async (month: string, settings: PayrollAutomationSettings) => {
  try {
    console.log(`–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞ ${month}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç
    await autoCalculatePayroll(month, settings);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç—ã –ø–æ email
    await sendPayrollReports(month, settings.emailRecipients);
    
    console.log(`–†—É—á–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –∑–∞ ${month} –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
 } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä—É—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç:', error);
    throw error;
 }
};