import { Request, Response, NextFunction } from 'express';
import User from '../users/user.model';
import Group from '../groups/group.model';
import Child from '../children/child.model';

// –¢–∏–ø—ã —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export type UserRole = 'admin' | 'manager' | 'teacher' | 'assistant' | 'cook' | 'cleaner' | 'security' | 'nurse' | 'child' | 'null' | 'doctor' | 'psychologist' | 'intern';

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const requireRole = (roles: UserRole[]) => {
  return (req: Request, res: Response, next: NextFunction) => {
    try {
      const user = req.user;
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?.role, '–≤ —Å–ø–∏—Å–∫–µ:', roles);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return res.status(401).json({ 
          success: false, 
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' 
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ–±—É–µ–º—ã—Ö —Ä–æ–ª–µ–π
      if (!roles.includes(user.role as UserRole)) {
        console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–π —Ä–æ–ª–∏:', user.role);
        return res.status(403).json({ 
          success: false, 
          message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏' 
        });
      }
      
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç —Ç—Ä–µ–±—É–µ–º—É—é —Ä–æ–ª—å:', user.role);
      next();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏:', error);
      return res.status(500).json({ 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' 
      });
    }
  };
};

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –≥—Ä—É–ø–ø–µ
export const requireGroupMembership = (groupIdParam: string = 'groupId') => {
  return async (req: Request, res: Response, next: NextFunction) => {
    try {
      const user = req.user;
      const groupId = req.params[groupIdParam] || req.body[groupIdParam] || req.query[groupIdParam];
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –≥—Ä—É–ø–ø–µ:', groupId, '–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?._id);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return res.status(401).json({ 
          success: false, 
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' 
        });
      }
      
      // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥—Ä—É–ø–ø–∞–º
      if (user.role === 'admin') {
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥—Ä—É–ø–ø–∞–º');
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã
      const group = await Group.findById(groupId);
      if (!group) {
        console.log('‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return res.status(404).json({ 
          success: false, 
          message: '–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' 
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã
      if (
        (group.teacherId && group.teacherId.toString() === user._id.toString()) ||
        (group.assistantTeacherId && group.assistantTeacherId.toString() === user._id.toString())
      ) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã');
        return next();
      }
      
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ');
      return res.status(403).json({ 
        success: false, 
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ' 
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –≥—Ä—É–ø–ø–µ:', error);
      return res.status(500).json({ 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –≥—Ä—É–ø–ø–µ' 
      });
    }
  };
};

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–±–µ–Ω–∫—É
export const requireChildOwnership = (childIdParam: string = 'childId') => {
  return async (req: Request, res: Response, next: NextFunction) => {
    try {
      const user = req.user;
      const childId = req.params[childIdParam] || req.body[childIdParam] || req.query[childIdParam];
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–±–µ–Ω–∫—É:', childId, '–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?._id);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return res.status(401).json({ 
          success: false, 
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' 
        });
      }
      
      // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –¥–µ—Ç—è–º
      if (user.role === 'admin' || user.role === 'manager') {
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –¥–µ—Ç—è–º');
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–æ–¥–∏—Ç–µ–ª–µ–º —Ä–µ–±–µ–Ω–∫–∞
      const child = await Child.findById(childId);
      if (!child) {
        console.log('‚ùå –†–µ–±–µ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return res.status(404).json({ 
          success: false, 
          message: '–†–µ–±–µ–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω' 
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–æ–¥–∏—Ç–µ–ª–µ–º —Ä–µ–±–µ–Ω–∫–∞
      if ((child as any).parentId && (child as any).parentId.toString() === user._id.toString()) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª–µ–º —Ä–µ–±–µ–Ω–∫–∞');
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã —Ä–µ–±–µ–Ω–∫–∞
      if (child.groupId) {
        const group = await Group.findById(child.groupId);
        if (group) {
          if (
            (group.teacherId && group.teacherId.toString() === user._id.toString()) ||
            (group.assistantTeacherId && group.assistantTeacherId.toString() === user._id.toString())
          ) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª–µ–º –∏–ª–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã —Ä–µ–±–µ–Ω–∫–∞');
            return next();
          }
        }
      }
      
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–±–µ–Ω–∫—É');
      return res.status(403).json({ 
        success: false, 
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–±–µ–Ω–∫—É' 
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–±–µ–Ω–∫—É:', error);
      return res.status(500).json({ 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–±–µ–Ω–∫—É' 
      });
    }
  };
};

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
export const requireStaffOwnership = (staffIdParam: string = 'staffId') => {
  return async (req: Request, res: Response, next: NextFunction) => {
    try {
      const user = req.user;
      const staffId = req.params[staffIdParam] || req.body[staffIdParam] || req.query[staffIdParam];
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É:', staffId, '–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?._id);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return res.status(401).json({ 
          success: false, 
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' 
        });
      }
      
      // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
      if (user.role === 'admin' || user.role === 'manager') {
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º');
        return next();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º–∏–º —Å–æ–±–æ–π (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ)
      if (staffId === user._id.toString()) {
        console.log('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ');
        return next();
      }
      
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É');
      return res.status(403).json({ 
        success: false, 
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É' 
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É:', error);
      return res.status(500).json({ 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É' 
      });
    }
  };
};
